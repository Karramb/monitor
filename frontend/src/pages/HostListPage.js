import React, { useEffect, useState } from 'react';
import { getHosts, getCsrfToken } from '../api';
import HostCard from '../components/HostCard';
import { Typography } from '@mui/material';

const HostListPage = () => {
  console.log('üèÅ HostListPage –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω');
  const [hosts, setHosts] = useState(null); // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ null –≤–º–µ—Å—Ç–æ []
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    console.log('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç HostListPage —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω');
    const fetchHosts = async () => {
      try {
        await getCsrfToken();
        const data = await getHosts();
        setHosts(data); // –î–∞–Ω–Ω—ã–µ —Ç–æ—á–Ω–æ –ø—Ä–∏–¥—É—Ç, —Ç.–∫. API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤
      } catch (err) {
        console.error('Error fetching hosts:', err);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤');
      } finally {
        setLoading(false);
      }
    };

    fetchHosts();
  }, []);

  if (loading) {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  if (error) {
    return <div>{error}</div>;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ null/undefined
  if (!hosts) {
    return <div>–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</div>;
  }

  return (
    <>
      <Typography variant="h4" gutterBottom>
        –°–µ—Ä–≤–µ—Ä—ã
      </Typography>
      {hosts.length > 0 ? (
        hosts.map((host) => (
          <HostCard key={host.id} host={host} />
        ))
      ) : (
        <div>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤</div>
      )}
    </>
  );
};

export default HostListPage;